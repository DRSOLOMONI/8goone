import json
from solana.rpc.api import Client
from solana.keypair import Keypair
from solana.transaction import Transaction
from solana.system_program import TransferParams, transfer
from base64 import b64decode
from pathlib import Path


class EightGoone:
    def __init__(self, rpc_url="https://api.devnet.solana.com"):
        self.client = Client(rpc_url)
        self.wallet = self._load_or_create_keypair()
        self.memory = {}

    def _load_or_create_keypair(self):
        key_path = Path("8goone_keypair.json")
        if key_path.exists():
            with key_path.open("r") as f:
                secret = json.load(f)
                return Keypair.from_secret_key(bytes(secret))
        else:
            keypair = Keypair()
            with key_path.open("w") as f:
                json.dump(list(keypair.secret_key), f)
            return keypair

    def learn(self, key: str, value: str):
        self.memory[key.lower()] = value

    def recall(self, key: str) -> str:
        return self.memory.get(key.lower(), "I don't know that yet.")

    def send_sol(self, to_pubkey: str, lamports: int = 1000):
        txn = Transaction()
        txn.add(
            transfer(
                TransferParams(
                    from_pubkey=self.wallet.public_key,
                    to_pubkey=to_pubkey,
                    lamports=lamports
                )
            )
        )
        try:
            result = self.client.send_transaction(txn, self.wallet)
            return result
        except Exception as e:
            return {"error": str(e)}

    def get_balance(self):
        try:
            balance = self.client.get_balance(self.wallet.public_key)
            return balance
        except Exception as e:
            return {"error": str(e)}


if __name__ == "__main__":
    bot = EightGoone()
    print("Public Key:", bot.wallet.public_key)
    print("Balance:", bot.get_balance())

    # Example usage
    bot.learn("solana", "A fast, scalable blockchain.")
    print("Memory recall (solana):", bot.recall("solana"))
